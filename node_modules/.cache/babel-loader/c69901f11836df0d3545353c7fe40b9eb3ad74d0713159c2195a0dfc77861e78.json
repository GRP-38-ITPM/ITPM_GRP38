{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder (24)\\\\Garbage\\\\frontend\\\\src\\\\components\\\\Edit.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Garbage from './Garbage';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Edit() {\n  _s();\n  const [id, setId] = useState('');\n  const [gbid, setGbId] = useState('');\n  const [gbname, setGbName] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [description, setDescription] = useState();\n\n  //api call to get particular garbage\n  const params = useParams();\n  console.log(id);\n  const fetchGarbage = async () => {\n    const result = await axios.get('http://localhost:8000/getgarbage/' + params.id);\n    const details = result.data.garbage;\n    setId(details.id);\n    setGbId(details.gbid);\n    setGbName(details.gbname);\n    setQuantity(details.quantity);\n    setDescription(details.description);\n  };\n  useEffect(() => {\n    fetchGarbage();\n  }, []);\n  var index = Garbage.map(item => item.id).indexOf(id);\n  console.log(index);\n  let history = useNavigate();\n  const handleUpdate = async e => {\n    e.preventDefault(); //avoid refreshing\n    if (!gbid || !gbname || !quantity || !description) {\n      return Swal.fire({\n        icon: 'error',\n        title: 'Error!',\n        text: 'All fields are required.',\n        showConfirmButton: true\n      });\n    }\n    const body = {\n      id,\n      gbid,\n      gbname,\n      quantity,\n      description\n    };\n    const result = await axios.post('http://localhost:8000/editgarbages', body);\n    alert(result.data.message);\n    Swal.fire({\n      icon: 'success',\n      title: 'Updated!',\n      text: `Data has been updated.`,\n      showConfirmButton: false,\n      timer: 1500\n    });\n    history('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-warning text-center\",\n      children: \"Update Garbage Management System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"border border-3 p-1 d-inline-block\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter your id\",\n          value: id,\n          onChange: e => setId(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Garbage Item Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter garbage item id\",\n          value: gbid,\n          onChange: e => setGbId(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Garbage Item Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Garbage Item Name\",\n          value: gbname,\n          onChange: e => setGbName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Quantity\",\n          value: quantity,\n          onChange: e => setQuantity(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: e => handleUpdate(e),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(Edit, \"Tuweuv61PC8w3IWs3aUe0wW9RRc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["React","Row","Col","Button","Form","useState","useEffect","useNavigate","useParams","Garbage","axios","Swal","Edit","id","setId","gbid","setGbId","gbname","setGbName","quantity","setQuantity","description","setDescription","params","console","log","fetchGarbage","result","get","details","data","garbage","index","map","item","indexOf","history","handleUpdate","e","preventDefault","fire","icon","title","text","showConfirmButton","body","post","alert","message","timer","target","value"],"sources":["E:/New folder (24)/Garbage/frontend/src/components/Edit.js"],"sourcesContent":["import React from 'react'\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport {useState,useEffect} from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Garbage from './Garbage';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nfunction Edit() {\n    const [id,setId]=useState('')\n    const [gbid,setGbId]=useState('')\n    const [gbname,setGbName]=useState('')\n    const [quantity,setQuantity]=useState('')\n    const [description,setDescription]=useState()\n\n    //api call to get particular garbage\n    const params=useParams()\n    console.log(id);\n    const fetchGarbage=async()=>{\n        const result = await axios.get('http://localhost:8000/getgarbage/'+params.id)\n        const details=result.data.garbage;\n        setId(details.id)\n        setGbId(details.gbid)\n        setGbName(details.gbname)\n        setQuantity(details.quantity)\n        setDescription(details.description)\n    }\n\n\n    useEffect(()=>{\n        fetchGarbage()\n\n        \n    },[])\n\n    var index = Garbage.map(item=>item.id).indexOf(id)\n    console.log(index);\n    let history=useNavigate()\n    const handleUpdate=async(e)=>{\n        e.preventDefault()//avoid refreshing\n        if (!gbid || !gbname || !quantity || !description) {\n            return Swal.fire({\n                icon: 'error',\n                title: 'Error!',\n                text: 'All fields are required.',\n                showConfirmButton: true\n            });\n        }\n        const body={\n            id,\n            gbid,\n            gbname,\n            quantity,\n            description\n          }\n          const result = await axios.post('http://localhost:8000/editgarbages',body)  \n          alert(result.data.message)\n          Swal.fire({\n            icon: 'success',\n            title: 'Updated!',\n            text: `Data has been updated.`,\n            showConfirmButton: false,\n            timer: 1500\n        });\n        history('/')\n    }\n  return (\n    <div className=\"text-center p-3\">\n    <h1 className='text-warning text-center'>Update Garbage Management System</h1>\n    \n        <Form className='border border-3 p-1 d-inline-block'>\n        <Form.Group className=\"mb-2\">\n            <Form.Label>ID</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter your id\" value={id} onChange={(e)=>setId(e.target.value)} required/>\n        </Form.Group>\n        <Form.Group className=\"mb-2\">\n            <Form.Label>Garbage Item Id</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter garbage item id\" value={gbid} onChange={(e)=>setGbId(e.target.value)} required/>\n        </Form.Group>\n        <Form.Group className=\"mb-2\">\n            <Form.Label>Garbage Item Name</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter Garbage Item Name\" value={gbname} onChange={(e)=>setGbName(e.target.value)} required/>\n        </Form.Group>\n        <Form.Group className=\"mb-2\">\n            <Form.Label>Quantity</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter Quantity\" value={quantity} onChange={(e)=>setQuantity(e.target.value)} required/>\n        </Form.Group>\n        <Form.Group className=\"mb-2\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control type=\"text\" placeholder=\"Enter Description\" value={description} onChange={(e)=>setDescription(e.target.value)} required/>\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\" onClick={(e)=>handleUpdate(e)}>\n            Update\n        </Button>\n    </Form>\n        </div>\n  )\n}\n\nexport default Edit"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}